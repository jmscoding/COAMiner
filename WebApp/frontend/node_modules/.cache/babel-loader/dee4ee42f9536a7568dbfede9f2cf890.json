{"ast":null,"code":"import axios from 'axios';\nimport { ALL_ARTICLES_REQUEST, ALL_ARTICLES_SUCCESS, ALL_ARTICLES_FAIL, CLEAR_ERRORS } from '../constants/articleconstants';\nexport const getArticles = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_ARTICLES_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/articles');\n    dispatch({\n      type: ALL_ARTICLES_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_ARTICLES_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["/home/js/Desktop/MongoDB/frontend/src/actions/articleaction.js"],"names":["axios","ALL_ARTICLES_REQUEST","ALL_ARTICLES_SUCCESS","ALL_ARTICLES_FAIL","CLEAR_ERRORS","getArticles","dispatch","type","data","get","payload","error","response","message","clearErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,YAJJ,QAKO,+BALP;AAQA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAMC,QAAN,IAAmB;AAChD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN;AADD,KAAD,CAAR;AAIA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,GAAN,CAAU,kBAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,oBADD;AAELQ,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAMH,GAbD,CAaE,OAAMG,KAAN,EAAY;AACVL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,iBADD;AAELO,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;AAFxB,KAAD,CAAR;AAIH;AACJ,CApBM,C,CAsBP;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACjDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEH;AADD,GAAD,CAAR;AAGH,CAJM","sourcesContent":["import axios from 'axios';\n\nimport { \n    ALL_ARTICLES_REQUEST,\n    ALL_ARTICLES_SUCCESS,\n    ALL_ARTICLES_FAIL,\n    CLEAR_ERRORS\n} from '../constants/articleconstants';\n\n\nexport const getArticles = () => async(dispatch) => {\n    try {\n        dispatch({\n            type: ALL_ARTICLES_REQUEST\n        })\n\n        const { data } = await axios.get('/api/v1/articles')\n\n        dispatch({\n            type: ALL_ARTICLES_SUCCESS,\n            payload: data\n        })\n\n\n    } catch(error){\n        dispatch({\n            type: ALL_ARTICLES_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}\n"]},"metadata":{},"sourceType":"module"}